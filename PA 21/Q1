//===============================================================
// Task 1A: Delta Encoding
//===============================================================

//--------------------
// SOLUTION
//--------------------
function delta_encode(L) {

    function encode(xs, prev) {
        return is_null(xs)
            ? null
            : pair(head(xs) - prev, encode(tail(xs), head(xs)));
    }
    return encode(L, 0);
}

//--------------------
// TESTCASES (PUBLIC)
//--------------------
display(
equal( null, delta_encode(null) ),
"1A_1:");

display(
equal( list(9), delta_encode(list(9)) ),
"1A_2:");

display(
equal( list(3,1,2,-8,0), delta_encode(list(3,4,6,-2,-2)) ),
"1A_3:");

//--------------------
// TESTCASES (PRIVATE)
//--------------------
display(
equal( null, delta_encode(null) ),
"1A_P1:");

display(
equal( list(95), delta_encode(list(95)) ),
"1A_P2:");

display(
equal( list(3, 1, 2, 3, -2, -6, 2),
       delta_encode(list(3, 4, 6, 9, 7, 1, 3)) ),
"1A_P3:");

display(
equal( list(2, 2, 1, 1, 0, 0, 1, -1, -1, 0, 0, -2),
       delta_encode(list(2, 4, 5, 6, 6, 6, 7, 6, 5, 5, 5, 3)) ),
"1A_P4:");

display(
equal( list(30, -6, 22, -27, 0, -31, 9),
       delta_encode(list(30, 24, 46, 19, 19, -12, -3)) ),
"1A_P5:");

//===============================================================




//===============================================================
// Task 1B: Delta Decoding
//===============================================================

//--------------------
// SOLUTION
//--------------------
function delta_decode(D) {

    function decode(xs, prev) {
        return is_null(xs)
            ? null
            : pair(prev + head(xs), decode(tail(xs), prev + head(xs)));
    }
    return decode(D, 0);
}

//--------------------
// TESTCASES (PUBLIC)
//--------------------
display(
equal( null, delta_decode(null) ),
"1B_1:");

display(
equal( list(9), delta_decode(list(9)) ),
"1B_2:");

display(
equal( list(3,4,6,-2,-2), delta_decode(list(3,1,2,-8,0)) ),
"1B_3:");

//--------------------
// TESTCASES (PRIVATE)
//--------------------
display(
equal( null, delta_decode(null) ),
"1B_P1:");

display(
equal( list(95), delta_decode(list(95)) ),
"1B_P2:");

display(
equal( list(3, 4, 6, 9, 7, 1, 3),
       delta_decode(list(3, 1, 2, 3, -2, -6, 2)) ),
"1B_P3:");

display(
equal( list(2, 4, 5, 6, 6, 6, 7, 6, 5, 5, 5, 3),
       delta_decode(list(2, 2, 1, 1, 0, 0, 1, -1, -1, 0, 0, -2)) ),
"1B_P4:");

display(
equal( list(30, 24, 46, 19, 19, -12, -3),
       delta_decode(list(30, -6, 22, -27, 0, -31, 9)) ),
"1B_P5:");

//===============================================================
